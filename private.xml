<?xml version="1.0"?>
<root>
  <item>
    <name>Force yourself to use the correct shift keys.</name>
    <identifier>space_cadet.force_correct_shifts</identifier>

    <autogen>
      --KeyToKey--
      KeyCode::Q, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::W, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::E, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::R, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::T, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::A, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::S, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::D, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::F, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::G, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::Z, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::X, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::C, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::V, ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>

    <autogen>
      --KeyToKey--
      KeyCode::Y, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::U, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::I, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::O, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::P, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::H, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::J, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::K, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::L, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::SEMICOLON, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::N, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::M, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::COMMA, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::DOT, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::QUOTE, ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::VK_NONE
    </autogen>
  </item>
  <item>
    <name>Shifts to Parentheses</name>
    <appendix>Shifts, when pressed alone, type parentheses.</appendix>
    <appendix>When used with other keys they're normal shifts.</appendix>

    <identifier>space_cadet.shifts_to_parens</identifier>

    <!-- This is the basic mapping. -->
    <autogen>
      --KeyOverlaidModifier--
      KeyCode::SHIFT_R,
      ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::SHIFT_R,
      KeyCode::KEY_0,
      ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyOverlaidModifier--
      KeyCode::SHIFT_L,
      ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::SHIFT_L,
      KeyCode::KEY_9,
      ModifierFlag::SHIFT_R
    </autogen>

    <!--
      Remap the "rolls" of () and )( because it's too easy to hit one
      before finishing the other, and there's no other reason to be
      pressing both shift keys at once anyway
    -->
    <autogen>
      --KeyToKey--
      KeyCode::SHIFT_L,
      ModifierFlag::SHIFT_R,
      KeyCode::KEY_0,
      ModifierFlag::SHIFT_L,
      KeyCode::KEY_9,
      ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::SHIFT_R,
      ModifierFlag::SHIFT_L,
      KeyCode::KEY_9,
      ModifierFlag::SHIFT_L,
      KeyCode::KEY_0,
      ModifierFlag::SHIFT_L
    </autogen>

    <!--
      Remap Rshift+Space to ') ', because when typing an end paren and
      then a space I tend to hit space before I let go of rshift.
    -->
    <autogen>
      --KeyToKey--
      KeyCode::SPACE,
      ModifierFlag::SHIFT_R,
      KeyCode::KEY_0,
      ModifierFlag::SHIFT_L,
      KeyCode::SPACE
    </autogen>
  </item>

  <item>
    <name>Disable Parentheses.</name>
    <appendix>Meant to be used with a mapping to parentheses</appendix>
    <appendix>as a way to train onself not to use the old keys.</appendix>
    <identifier>space_cadet.disable_parentheses</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::KEY_9,
      ModifierFlag::SHIFT_L,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::KEY_0,
      ModifierFlag::SHIFT_L,
      KeyCode::VK_NONE
    </autogen>
  </item>
  <item>
    <name>Commands to Curly Brackets</name>
    <appendix>Command keys, when pressed alone, type curly brackets.</appendix>
    <appendix>When used with other keys they're normal commands.</appendix>
    <identifier>space_cadet.cmds_to_cbrackets</identifier>

    <!-- This is the basic mapping. -->
    <autogen>
      --KeyOverlaidModifier--
      KeyCode::COMMAND_R,
      ModifierFlag::COMMAND_R | ModifierFlag::NONE,
      KeyCode::COMMAND_R,
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyOverlaidModifier--
      KeyCode::COMMAND_L,
      ModifierFlag::COMMAND_L | ModifierFlag::NONE,
      KeyCode::COMMAND_L,
      KeyCode::BRACKET_LEFT,
      ModifierFlag::SHIFT_L
    </autogen>

    <!--
      Remap the "rolls" of {} and }{ because it's too easy to hit one
      before finishing the other, and there's no other reason to be
      pressing both keys at once anyway
    -->
    <autogen>
      --KeyToKey--
      KeyCode::COMMAND_L,
      ModifierFlag::COMMAND_R,
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::SHIFT_L,
      KeyCode::BRACKET_LEFT,
      ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::COMMAND_R,
      ModifierFlag::COMMAND_L,
      KeyCode::BRACKET_LEFT,
      ModifierFlag::SHIFT_L,
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::SHIFT_L
    </autogen>

    <!--
      Remap the "rolls" of ({ and }) because it
      will sometimes happen when going fast.
    -->
    <autogen>
      --KeyToKey--
      KeyCode::COMMAND_L,
      ModifierFlag::SHIFT_L,
      KeyCode::KEY_9,
      ModifierFlag::SHIFT_L,
      KeyCode::BRACKET_LEFT,
      ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::SHIFT_R,
      ModifierFlag::COMMAND_R,
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::SHIFT_L,
      KeyCode::KEY_0,
      ModifierFlag::SHIFT_L
    </autogen>
  </item>
  <item>
    <name>Disable Curly Brackets.</name>
    <appendix>Meant to be used with a mapping to curly brackets</appendix>
    <appendix>as a way to train oneself not to use the old keys.</appendix>
    <identifier>space_cadet.disable_cbrackets</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::BRACKET_LEFT,
      ModifierFlag::SHIFT_L,
      KeyCode::VK_NONE
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::SHIFT_L,
      KeyCode::VK_NONE
    </autogen>
  </item>
  <item>
    <name>Remap Left Control to Hyper</name>
    <appendix>OS X doesn't have a Hyper. This maps Left Control to Control + Option + Command.</appendix>
    <appendix>You can use this key in your own custom keyboard shortcuts you create in apps.</appendix>
    <identifier>space_cadet.left_control_to_hyper</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::F19,

      KeyCode::COMMAND_L,
      ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L
    </autogen>
  </item>
  <item>
    <name>Remap Ctrl + j/k to down/up</name>
    <identifier>space_cadet.remap_ctrl_jk_to_down_up</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::J,
      ModifierFlag::CONTROL_L | ModifierFlag::NONE,
      KeyCode::CURSOR_DOWN
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::K,
      ModifierFlag::CONTROL_L | ModifierFlag::NONE,
      KeyCode::CURSOR_UP
    </autogen>
  </item>
  <item>
    <name>Remap Shift + Cmd + j/k to down/up</name>
    <identifier>space_cadet.remap_shift_cmd_jk_to_down_up</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::J,
      ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
      KeyCode::CURSOR_DOWN
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::K,
      ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
      KeyCode::CURSOR_UP
    </autogen>
  </item>
  <item>
    <name>Remap Ctrl+Space to Enter</name>
    <identifier>space_cadet.remap_ctrl_space_to_enter</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::SPACE,
      ModifierFlag::CONTROL_L,
      KeyCode::ENTER
    </autogen>
  </item>
  <item>
    <name>Remap Shift+Space to Enter</name>
    <identifier>space_cadet.remap_shift_space_to_enter</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::SPACE,
      ModifierFlag::SHIFT_L,
      KeyCode::ENTER
    </autogen>
  </item>
  <item>
    <name>Remap Ctrl+Cmd+j/k to Shift+Cmd+[/]</name>
    <identifier>space_cadet.remap_ctrl_cmd_jk_to_shift_cmd_brackets</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::H,
      ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_L | ModifierFlag::NONE,
      KeyCode::BRACKET_LEFT,
      ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::L,
      ModifierFlag::CONTROL_L | ModifierFlag::COMMAND_L | ModifierFlag::NONE,
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
    </autogen>
  </item>
  <item>
    <name>Remap Ctrl+h/l to Shift+Cmd+[/]</name>
    <appendix>In various apps, pressing Shift+Cmd+[/] navigates through tabs.</appendix>
    <identifier>space_cadet.remap_ctrl_jk_to_shift_cmd_brackets</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::H,
      ModifierFlag::CONTROL_L | ModifierFlag::NONE,
      KeyCode::BRACKET_LEFT,
      ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::L,
      ModifierFlag::CONTROL_L | ModifierFlag::NONE,
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
    </autogen>
  </item>
  <item>
    <name>Fix Ctrl to Escape</name>
    <appendix>In vim, sometimes when pressing ctrl and ;/: too quicly, it won't register it as ESCAPE.</appendix>
    <identifier>space_cadet.fix_ctrl_to_escape</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::SEMICOLON,
      ModifierFlag::CONTROL_L,
      KeyCode::ESCAPE,
      KeyCode::SEMICOLON
    </autogen>
  </item>
  <item>
    <name>Ctrl + U to Capslock</name>
    <identifier>space_cadet.remap_ctrl_u_to_capslock</identifier>
    <autogen>
      --KeyToKey--
      KeyCode::U,
      ModifierFlag::CONTROL_L,
      KeyCode::CAPSLOCK,
      ModifierFlag::NONE
    </autogen>
  </item>
</root>

